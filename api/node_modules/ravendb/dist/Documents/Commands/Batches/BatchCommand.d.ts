import { IRavenArrayResult } from "../../../Types";
import { RavenCommand } from "../../../Http/RavenCommand";
import { IDisposable } from "../../../Types/Contracts";
import { ICommandData } from "../CommandData";
import { BatchOptions } from "./BatchOptions";
import { DocumentConventions } from "../../Conventions/DocumentConventions";
import { ServerNode } from "../../../Http/ServerNode";
import { HttpRequestBase } from "../../../Primitives/Http";
export declare class BatchCommand extends RavenCommand<IRavenArrayResult> implements IDisposable {
    private _commands;
    private _options;
    constructor(conventions: DocumentConventions, commands: ICommandData[]);
    constructor(conventions: DocumentConventions, commands: ICommandData[], options: BatchOptions);
    createRequest(node: ServerNode): HttpRequestBase;
    setResponse(response: string, fromCache: boolean): void;
    private _appendOptions();
    readonly isReadRequest: boolean;
    dispose(): void;
}
