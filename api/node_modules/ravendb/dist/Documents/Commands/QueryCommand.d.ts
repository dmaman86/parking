import { HttpRequestBase } from "../../Primitives/Http";
import { RavenCommand } from "../../Http/RavenCommand";
import { QueryResult } from "../Queries/QueryResult";
import { DocumentConventions } from "../Conventions/DocumentConventions";
import { IndexQuery } from "../Queries/IndexQuery";
import { ServerNode } from "../../Http/ServerNode";
import { JsonSerializer } from "../../Mapping/Json/Serializer";
export declare class QueryCommand extends RavenCommand<QueryResult> {
    private _conventions;
    private _indexQuery;
    private _metadataOnly;
    private _indexEntriesOnly;
    constructor(conventions: DocumentConventions, indexQuery: IndexQuery, metadataOnly: boolean, indexEntriesOnly: boolean);
    createRequest(node: ServerNode): HttpRequestBase;
    protected readonly _serializer: JsonSerializer;
    setResponse(response: string, fromCache: boolean): void;
    readonly isReadRequest: boolean;
}
