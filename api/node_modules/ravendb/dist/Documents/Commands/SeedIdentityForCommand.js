"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const RavenCommand_1 = require("../../Http/RavenCommand");
const Exceptions_1 = require("../../Exceptions");
class SeedIdentityForCommand extends RavenCommand_1.RavenCommand {
    constructor(id, value) {
        super();
        if (!id) {
            Exceptions_1.throwError("InvalidArgumentException", "Id cannot be null");
        }
        this._id = id;
        this._value = value;
    }
    get isReadRequest() {
        return false;
    }
    createRequest(node) {
        RavenCommand_1.RavenCommand.ensureIsNotNullOrEmpty(this._id, "id");
        const uri = node.url + "/databases/" + node.database
            + "/identity/seed?name=" + encodeURIComponent(this._id) + "&value=" + this._value;
        return {
            method: "POST",
            uri
        };
    }
    setResponse(response, fromCache) {
        if (!response) {
            this._throwInvalidResponse();
        }
        const jsonNode = this._serializer.deserialize(response);
        if (!jsonNode["newSeedValue"]) {
            this._throwInvalidResponse();
        }
        this.result = jsonNode["newSeedValue"];
    }
}
exports.SeedIdentityForCommand = SeedIdentityForCommand;
