"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const LogUtil_1 = require("../../Utility/LogUtil");
const PutIndexesOperation_1 = require("../Operations/Indexes/PutIndexesOperation");
const log = LogUtil_1.getLogger({ module: "DocumentStore" });
class IndexCreation {
    static createIndexes(indexes, store, conventions) {
        if (!conventions) {
            conventions = store.conventions;
        }
        return Promise.resolve()
            .then(() => {
            const indexesToAdd = this.createIndexesToAdd(indexes, conventions);
            return store.maintenance.send(new PutIndexesOperation_1.PutIndexesOperation(...indexesToAdd));
        })
            .catch(err => {
            log.warn(err, "Could not create indexes in one shot (maybe using older version of RavenDB ?)");
            return indexes.reduce((result, idx) => {
                return result.then(() => {
                    return idx.execute(store, conventions);
                });
            }, Promise.resolve());
        })
            .then(() => { });
    }
    static createIndexesToAdd(indexCreationTasks, conventions) {
        return indexCreationTasks
            .map(x => {
            x.conventions = conventions;
            const definition = x.createIndexDefinition();
            definition.name = x.getIndexName();
            definition.priority = x.priority || "Normal";
            return definition;
        });
    }
}
exports.IndexCreation = IndexCreation;
