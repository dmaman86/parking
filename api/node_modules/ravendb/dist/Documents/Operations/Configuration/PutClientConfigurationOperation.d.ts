import { IMaintenanceOperation, OperationResultType } from "../OperationAbstractions";
import { ClientConfiguration } from "./ClientConfiguration";
import { RavenCommand, RavenCommandResponseType } from "../../../Http/RavenCommand";
import { DocumentConventions } from "../../..";
import { HttpRequestBase } from "../../../Primitives/Http";
import { ServerNode } from "../../../Http/ServerNode";
export declare class PutClientConfigurationOperation implements IMaintenanceOperation<void> {
    private configuration;
    readonly resultType: OperationResultType;
    constructor(configuration: ClientConfiguration);
    getCommand(conventions: DocumentConventions): RavenCommand<void>;
}
export declare class PutClientConfigurationCommand extends RavenCommand<void> {
    private _configuration;
    readonly isReadRequest: boolean;
    readonly responseType: RavenCommandResponseType;
    constructor(conventions: DocumentConventions, configuration: ClientConfiguration);
    createRequest(node: ServerNode): HttpRequestBase;
}
