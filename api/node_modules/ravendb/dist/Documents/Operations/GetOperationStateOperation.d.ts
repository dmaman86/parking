import { DocumentConventions } from "../..";
import { ServerNode } from "../../Http/ServerNode";
import { HttpRequestBase } from "../../Primitives/Http";
import { RavenCommand, IRavenResponse } from "../../Http/RavenCommand";
import { IMaintenanceOperation, OperationResultType } from "./OperationAbstractions";
export declare class GetOperationStateOperation implements IMaintenanceOperation<IRavenResponse> {
    private _id;
    constructor(id: number);
    getCommand(conventions: DocumentConventions): RavenCommand<IRavenResponse>;
    readonly resultType: OperationResultType;
}
export declare class GetOperationStateCommand extends RavenCommand<IRavenResponse> {
    readonly isReadRequest: boolean;
    private _conventions;
    private _id;
    constructor(conventions: DocumentConventions, id: number);
    createRequest(node: ServerNode): HttpRequestBase;
    setResponse(response: string, fromCache: boolean): void;
}
