import { IMaintenanceOperation, OperationResultType } from "./OperationAbstractions";
import { ServerNode } from "../../Http/ServerNode";
import { RavenCommand } from "../../Http/RavenCommand";
import { HttpRequestBase } from "../../Primitives/Http";
import { DocumentConventions } from "../Conventions/DocumentConventions";
import { DatabaseStatistics } from "./DatabaseStatistics";
export declare class GetStatisticsOperation implements IMaintenanceOperation<DatabaseStatistics> {
    readonly resultType: OperationResultType;
    private readonly _debugTag;
    constructor(debugTag?: string);
    getCommand(conventions: DocumentConventions): RavenCommand<DatabaseStatistics>;
}
export declare class GetStatisticsCommand extends RavenCommand<DatabaseStatistics> {
    private _debugTag;
    constructor(debugTag?: string);
    createRequest(node: ServerNode): HttpRequestBase;
    setResponse(response: string, fromCache: boolean): void;
    readonly isReadRequest: boolean;
}
