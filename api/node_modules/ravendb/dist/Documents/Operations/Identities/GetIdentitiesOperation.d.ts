import { HttpRequestBase } from "../../../Primitives/Http";
import { OperationResultType, IMaintenanceOperation } from "../OperationAbstractions";
import { DocumentConventions } from "../../Conventions/DocumentConventions";
import { RavenCommand } from "../../../Http/RavenCommand";
import { ServerNode } from "../../../Http/ServerNode";
export interface IdentitiesCollection {
    [key: string]: number;
}
export declare class GetIdentitiesOperation implements IMaintenanceOperation<IdentitiesCollection> {
    readonly resultType: OperationResultType;
    getCommand(conventions: DocumentConventions): RavenCommand<IdentitiesCollection>;
}
export declare class GetIdentitiesCommand extends RavenCommand<IdentitiesCollection> {
    constructor();
    readonly isReadRequest: boolean;
    createRequest(node: ServerNode): HttpRequestBase;
    setResponse(response: string, fromCache: boolean): void;
}
