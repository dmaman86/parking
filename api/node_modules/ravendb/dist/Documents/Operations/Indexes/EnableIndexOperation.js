"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Exceptions_1 = require("../../../Exceptions");
const __1 = require("../../..");
class EnableIndexOperation {
    constructor(indexName) {
        if (!indexName) {
            Exceptions_1.throwError("InvalidArgumentException", "IndexName cannot be null");
        }
        this._indexName = indexName;
    }
    getCommand(conventions) {
        return new EnableIndexCommand(this._indexName);
    }
    get resultType() {
        return "CommandResult";
    }
}
exports.EnableIndexOperation = EnableIndexOperation;
class EnableIndexCommand extends __1.RavenCommand {
    constructor(indexName) {
        super();
        if (!indexName) {
            Exceptions_1.throwError("InvalidArgumentException", "IndexName cannot be null");
        }
        this._indexName = indexName;
    }
    createRequest(node) {
        const uri = node.url + "/databases/" + node.database
            + "/admin/indexes/enable?name=" + encodeURIComponent(this._indexName);
        return {
            method: "POST",
            uri
        };
    }
    get isReadRequest() {
        return false;
    }
}
exports.EnableIndexCommand = EnableIndexCommand;
