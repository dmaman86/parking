import { IMaintenanceOperation, OperationResultType } from "../OperationAbstractions";
import { IndexErrors } from "../../Indexes/Errors";
import { RavenCommand } from "../../../Http/RavenCommand";
import { DocumentConventions } from "../../Conventions/DocumentConventions";
import { ServerNode } from "../../../Http/ServerNode";
import { HttpRequestBase } from "../../../Primitives/Http";
export declare class GetIndexErrorsOperation implements IMaintenanceOperation<IndexErrors[]> {
    private _indexNames;
    constructor();
    constructor(indexNames: string[]);
    getCommand(conventions: DocumentConventions): RavenCommand<IndexErrors[]>;
    readonly resultType: OperationResultType;
}
export declare class GetIndexErrorsCommand extends RavenCommand<IndexErrors[]> {
    private _indexNames;
    constructor(indexNames: string[]);
    createRequest(node: ServerNode): HttpRequestBase;
    setResponse(response: string, fromCache: boolean): void;
    readonly isReadRequest: boolean;
}
