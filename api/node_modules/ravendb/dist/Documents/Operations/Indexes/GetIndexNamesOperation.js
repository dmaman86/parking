"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const RavenCommand_1 = require("../../../Http/RavenCommand");
class GetIndexNamesOperation {
    get resultType() {
        return "CommandResult";
    }
    constructor(start, pageSize) {
        this._start = start;
        this._pageSize = pageSize;
    }
    getCommand(conventions) {
        return new GetIndexNamesCommand(this._start, this._pageSize);
    }
}
exports.GetIndexNamesOperation = GetIndexNamesOperation;
class GetIndexNamesCommand extends RavenCommand_1.RavenCommand {
    constructor(start, pageSize) {
        super();
        this._start = start;
        this._pageSize = pageSize;
    }
    createRequest(node) {
        const uri = node.url + "/databases/" + node.database
            + "/indexes?start=" + this._start + "&pageSize=" + this._pageSize + "&namesOnly=true";
        return { uri };
    }
    setResponse(response, fromCache) {
        if (!response) {
            this._throwInvalidResponse();
        }
        this.result = this._serializer.deserialize(response)["results"];
    }
    get isReadRequest() {
        return true;
    }
}
exports.GetIndexNamesCommand = GetIndexNamesCommand;
