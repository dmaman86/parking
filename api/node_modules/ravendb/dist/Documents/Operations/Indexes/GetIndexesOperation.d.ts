import { HttpRequestBase } from "../../../Primitives/Http";
import { ServerNode } from "../../../Http/ServerNode";
import { RavenCommand } from "../../../Http/RavenCommand";
import { IndexDefinition } from "../../Indexes/IndexDefinition";
import { IMaintenanceOperation, OperationResultType } from "../OperationAbstractions";
import { DocumentConventions } from "../../Conventions/DocumentConventions";
export declare class GetIndexesOperation implements IMaintenanceOperation<IndexDefinition[]> {
    private _start;
    private _pageSize;
    constructor(start: number, pageSize: number);
    getCommand(conventions: DocumentConventions): RavenCommand<IndexDefinition[]>;
    readonly resultType: OperationResultType;
}
export declare class GetIndexesCommand extends RavenCommand<IndexDefinition[]> {
    private _start;
    private _pageSize;
    constructor(start: number, pageSize: number);
    createRequest(node: ServerNode): HttpRequestBase;
    setResponse(response: string, fromCache: boolean): void;
    readonly isReadRequest: boolean;
}
