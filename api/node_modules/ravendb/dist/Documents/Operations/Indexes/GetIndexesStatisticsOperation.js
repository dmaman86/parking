"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const IndexStats_1 = require("../../Indexes/IndexStats");
const RavenCommand_1 = require("../../../Http/RavenCommand");
class GetIndexesStatisticsOperation {
    get resultType() {
        return "CommandResult";
    }
    getCommand(conventions) {
        return new GetIndexesStatisticsCommand();
    }
}
exports.GetIndexesStatisticsOperation = GetIndexesStatisticsOperation;
class GetIndexesStatisticsCommand extends RavenCommand_1.RavenCommand {
    constructor() {
        super();
    }
    createRequest(node) {
        const uri = node.url + "/databases/" + node.database + "/indexes/stats";
        return { uri };
    }
    setResponse(response, fromCache) {
        if (!response) {
            this._throwInvalidResponse();
        }
        const responseObj = this._parseResponseDefault(response, {
            nestedTypes: {
                "results[].collections": "Map",
                "results[].collections$MAP": "CollectionStats"
            }
        }, new Map([[IndexStats_1.CollectionStats.name, IndexStats_1.CollectionStats]]));
        this.result = responseObj["results"];
    }
    get isReadRequest() {
        return true;
    }
}
exports.GetIndexesStatisticsCommand = GetIndexesStatisticsCommand;
