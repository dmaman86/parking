import { IMaintenanceOperation, OperationResultType } from "../OperationAbstractions";
import { DocumentConventions } from "../../Conventions/DocumentConventions";
import { RavenCommand } from "../../../Http/RavenCommand";
import { HttpRequestBase } from "../../../Primitives/Http";
import { ServerNode } from "../../../Http/ServerNode";
import { IndexingStatus } from "../../Indexes/IndexingStatus";
export declare class GetIndexingStatusOperation implements IMaintenanceOperation<IndexingStatus> {
    readonly resultType: OperationResultType;
    getCommand(conventions: DocumentConventions): RavenCommand<IndexingStatus>;
}
export declare class GetIndexingStatusCommand extends RavenCommand<IndexingStatus> {
    createRequest(node: ServerNode): HttpRequestBase;
    setResponse(response: string, fromCache: boolean): void;
    readonly isReadRequest: boolean;
}
