import { IMaintenanceOperation, OperationResultType } from "../OperationAbstractions";
import { RavenCommand } from "../../../Http/RavenCommand";
import { DocumentConventions } from "../../Conventions/DocumentConventions";
import { IndexPriority } from "../../Indexes/Enums";
import { ServerNode } from "../../../Http/ServerNode";
import { HttpRequestBase } from "../../../Primitives/Http";
export declare class SetIndexesPriorityOperation implements IMaintenanceOperation<void> {
    private _parameters;
    constructor(indexName: string, mode: IndexPriority);
    constructor(parameters: SetIndexesPriorityOperationParameters);
    getCommand(conventions: DocumentConventions): RavenCommand<void>;
    readonly resultType: OperationResultType;
}
export declare class SetIndexPriorityCommand extends RavenCommand<void> {
    private _parameters;
    constructor(conventions: DocumentConventions, parameters: SetIndexesPriorityOperationParameters);
    createRequest(node: ServerNode): HttpRequestBase;
    readonly isReadRequest: boolean;
}
export interface SetIndexesPriorityOperationParameters {
    indexNames: string[];
    priority: IndexPriority;
}
