import { HttpRequestBase } from "../../../Primitives/Http";
import { IMaintenanceOperation, OperationResultType } from "../OperationAbstractions";
import { ModifyOngoingTaskResult } from "../../../ServerWide/ModifyOnGoingTaskResult";
import { ExternalReplication } from "../../Replication/ExternalReplication";
import { RavenCommand } from "../../../Http/RavenCommand";
import { DocumentConventions } from "../../Conventions/DocumentConventions";
import { ServerNode } from "../../../Http/ServerNode";
export declare class UpdateExternalReplicationOperation implements IMaintenanceOperation<ModifyOngoingTaskResult> {
    private _newWatcher;
    constructor(newWatcher: ExternalReplication);
    getCommand(conventions: DocumentConventions): RavenCommand<ModifyOngoingTaskResult>;
    readonly resultType: OperationResultType;
}
export declare class UpdateExternalReplicationCommand extends RavenCommand<ModifyOngoingTaskResult> {
    private _newWatcher;
    constructor(newWatcher: ExternalReplication);
    createRequest(node: ServerNode): HttpRequestBase;
    readonly isReadRequest: boolean;
    setResponse(response: string, fromCache: boolean): void;
}
