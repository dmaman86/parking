"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const RavenCommand_1 = require("../../../Http/RavenCommand");
class UpdateExternalReplicationOperation {
    constructor(newWatcher) {
        this._newWatcher = newWatcher;
    }
    getCommand(conventions) {
        return new UpdateExternalReplicationCommand(this._newWatcher);
    }
    get resultType() {
        return "CommandResult";
    }
}
exports.UpdateExternalReplicationOperation = UpdateExternalReplicationOperation;
class UpdateExternalReplicationCommand extends RavenCommand_1.RavenCommand {
    constructor(newWatcher) {
        super();
        this._newWatcher = newWatcher;
    }
    createRequest(node) {
        const uri = node.url + "/databases/" + node.database + "/admin/tasks/external-replication";
        const headers = this._getHeaders()
            .withContentTypeJson().build();
        const body = this._serializer.serialize({ watcher: this._newWatcher });
        return {
            method: "POST",
            uri,
            headers,
            body
        };
    }
    get isReadRequest() {
        return false;
    }
    setResponse(response, fromCache) {
        if (!response) {
            this._throwInvalidResponse();
        }
        this.result = this._serializer.deserialize(response);
    }
}
exports.UpdateExternalReplicationCommand = UpdateExternalReplicationCommand;
