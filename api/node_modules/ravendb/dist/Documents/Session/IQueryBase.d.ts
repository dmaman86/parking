import { QueryOperator } from "../Queries/QueryOperator";
import { IndexQuery } from "../Queries/IndexQuery";
import { QueryStatistics } from "./QueryStatistics";
import { DocumentConventions } from "../Conventions/DocumentConventions";
export interface IQueryBase<T, TSelf extends IQueryBase<T, TSelf>> {
    conventions: DocumentConventions;
    noCaching(): TSelf;
    noTracking(): TSelf;
    skip(count: number): TSelf;
    statistics(statsCallback: (stats: QueryStatistics) => void): TSelf;
    take(count: number): TSelf;
    usingDefaultOperator(queryOperator: QueryOperator): TSelf;
    waitForNonStaleResults(): TSelf;
    waitForNonStaleResults(waitTimeout: number): TSelf;
    getIndexQuery(): IndexQuery;
    addParameter(name: string, value: any): TSelf;
}
