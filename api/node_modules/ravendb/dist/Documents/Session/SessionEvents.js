"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class SessionBeforeStoreEventArgs {
    constructor(session, documentId, entity) {
        this._session = session;
        this._documentId = documentId;
        this._entity = entity;
    }
    get session() {
        return this._session;
    }
    get documentId() {
        return this._documentId;
    }
    getEntity() {
        return this._entity;
    }
    isMetadataAccessed() {
        return !!this._documentMetadata;
    }
    getDocumentMetadata() {
        if (!this._documentMetadata) {
            this._documentMetadata = this._session.getMetadataFor(this._entity);
        }
        return this._documentMetadata;
    }
}
exports.SessionBeforeStoreEventArgs = SessionBeforeStoreEventArgs;
class SessionBeforeQueryEventArgs {
    constructor(session) {
        this.session = session;
    }
}
exports.SessionBeforeQueryEventArgs = SessionBeforeQueryEventArgs;
class SessionBeforeDeleteEventArgs {
    constructor(session, documentId, entity) {
        this._session = session;
        this._documentId = documentId;
        this._entity = entity;
    }
    get session() {
        return this._session;
    }
    get documentId() {
        return this._documentId;
    }
    get entity() {
        return this._entity;
    }
    get documentMetadata() {
        if (!this._documentMetadata) {
            this._documentMetadata = this._session.getMetadataFor(this._entity);
        }
        return this._documentMetadata;
    }
}
exports.SessionBeforeDeleteEventArgs = SessionBeforeDeleteEventArgs;
class SessionAfterSaveChangesEventArgs {
    constructor(session, documentId, entity) {
        this.session = session;
        this.documentId = documentId;
        this.entity = entity;
    }
    get documentMetadata() {
        if (!this._documentMetadata) {
            this._documentMetadata = this.session.getMetadataFor(this.entity);
        }
        return this._documentMetadata;
    }
}
exports.SessionAfterSaveChangesEventArgs = SessionAfterSaveChangesEventArgs;
