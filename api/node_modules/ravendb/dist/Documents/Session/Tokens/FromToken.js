"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const QueryToken_1 = require("./QueryToken");
const Exceptions_1 = require("../../../Exceptions");
class FromToken extends QueryToken_1.QueryToken {
    constructor(indexName, collectionName, alias = null) {
        super();
        this._collectionName = collectionName;
        this._indexName = indexName;
        this._dynamic = !!collectionName;
        this._alias = alias;
    }
    get collection() {
        return this._collectionName;
    }
    get indexName() {
        return this._indexName;
    }
    get isDynamic() {
        return this._dynamic;
    }
    alias() {
        return this._alias;
    }
    static create(indexName, collectionName, alias) {
        return new FromToken(indexName, collectionName, alias);
    }
    writeTo(writer) {
        if (!this._indexName && !this._collectionName) {
            Exceptions_1.throwError("InvalidOperationException", "Either indexName or collectionName must be specified");
        }
        if (this._dynamic) {
            writer.append("from ");
            if (FromToken.WHITE_SPACE_CHARS.some(c => this._collectionName.indexOf(c) !== -1)) {
                if (this._collectionName.indexOf("\"") !== -1) {
                    this.throwInvalidCollectionName();
                }
                writer.append("\"").append(this._collectionName).append("\"");
            }
            else {
                this._writeField(writer, this._collectionName);
            }
        }
        else {
            writer
                .append("from index '")
                .append(this._indexName)
                .append("'");
        }
        if (this._alias) {
            writer.append(" as ").append(this._alias);
        }
    }
    throwInvalidCollectionName() {
        Exceptions_1.throwError("InvalidArgumentException", "Collection name cannot contain a quote, but was: " + this._collectionName);
    }
}
FromToken.WHITE_SPACE_CHARS = [" ", "\t", "\r", "\n"];
exports.FromToken = FromToken;
