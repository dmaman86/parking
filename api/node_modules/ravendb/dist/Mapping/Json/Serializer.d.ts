import { ReplacerTransformRule } from "./ReplacerFactory";
import { ReviverTransformRule } from "./ReviverFactory";
export declare type JsonTransformFunction = (key, value) => any;
export interface JsonSerializerSettings {
    replacerRules?: ReplacerTransformRule[];
    reviverRules?: ReviverTransformRule[];
}
export declare class JsonSerializer {
    private _reviverRules;
    private _replacerRules;
    reviverRules: ReviverTransformRule[];
    replacerRules: ReplacerTransformRule[];
    constructor(opts?: JsonSerializerSettings);
    deserialize<TResult = object>(jsonString: string): TResult;
    serialize(obj: object): string;
    static getDefault(): JsonSerializer;
    static getDefaultForCommandPayload(): JsonSerializer;
    static getDefaultForEntities(): JsonSerializer;
}
