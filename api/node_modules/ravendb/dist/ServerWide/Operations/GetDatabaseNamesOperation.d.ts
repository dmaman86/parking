import { IServerOperation, OperationResultType } from "../../Documents/Operations/OperationAbstractions";
import { RavenCommand } from "../../Http/RavenCommand";
import { DocumentConventions } from "../..";
import { ServerNode } from "../../Http/ServerNode";
import { HttpRequestBase } from "../../Primitives/Http";
export declare class GetDatabaseNamesOperation implements IServerOperation<string[]> {
    private _start;
    private _pageSize;
    constructor(start: number, pageSize: number);
    getCommand(conventions: DocumentConventions): RavenCommand<string[]>;
    readonly resultType: OperationResultType;
}
export declare class GetDatabaseNamesCommand extends RavenCommand<string[]> {
    private _start;
    private _pageSize;
    constructor(start: number, pageSize: number);
    readonly isReadRequest: boolean;
    createRequest(node: ServerNode): HttpRequestBase;
    setResponse(response: string, fromCache: boolean): void;
}
