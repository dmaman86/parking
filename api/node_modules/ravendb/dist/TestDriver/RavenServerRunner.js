"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
const child_process_1 = require("child_process");
const Exceptions_1 = require("../Exceptions");
class RavenServerRunner {
    static run(locator) {
        const processStartInfo = this._getProcessStartInfo(locator);
        return child_process_1.spawn(processStartInfo.command, processStartInfo.arguments);
    }
    static _getProcessStartInfo(locator) {
        if (!locator) {
            Exceptions_1.throwError("InvalidArgumentException", "Locator instance is mandatory.");
        }
        const serverPath = locator.getServerPath();
        if (!fs.existsSync(serverPath)) {
            Exceptions_1.throwError("FileNotFoundException", `Server file was not found: ${locator.getServerPath()}`);
        }
        const commandArguments = [
            locator.withHttps()
                ? `--ServerUrl=https://${locator.getServerHost()}:8085`
                : `--ServerUrl=http://${locator.getServerHost()}:0`,
            "--RunInMemory=true",
            "--License.Eula.Accepted=true",
            "--Setup.Mode=None",
            `--Testing.ParentProcessId=${process.pid}`,
            ...locator.getCommandArguments()
        ];
        return {
            command: locator.getCommand(),
            arguments: commandArguments
        };
    }
}
exports.RavenServerRunner = RavenServerRunner;
